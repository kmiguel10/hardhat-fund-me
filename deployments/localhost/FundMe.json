{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf4b775efe6d2192f2aab6986fd70345c476dd2fddb979d8c60a542b5240e3e22",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1070120",
    "logsBloom": "0x
    "blockHash": "0x5ffe109e41a5e77d1bbf2c0f65e37fab78376e883f78541b5c376d7129f756cb",
    "transactionHash": "0xf4b775efe6d2192f2aab6986fd70345c476dd2fddb979d8c60a542b5240e3e22",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1070120",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ebbc3988a60bb03e5d6339bafd937803",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kent Miguel\",\"details\":\"This implements price feeds to our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contracct for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//error codes\\nerror FundMe__NotOwner();\\n\\n//Interfaces, libraries, contracts\\n\\n/** @title A contracct for crowd funding\\n*   @author Kent Miguel\\n*   @notice This contract is to demo a sample funding contract\\n*   @dev This implements price feeds to our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n\\n    //state variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //Modifiers\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    //make priceFeed a parameter\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress); //gets priceFeed contract based on current chain\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() payable public onlyOwner{\\n        address[] memory funders = s_funders;\\n        //Mappings cannot be in memory\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n         (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunder(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\\n\",\"keccak256\":\"0x1ed86ad0c6d200f8349bae21a69cfdbe0d33518efe44524e78cabe813d79aa1d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2b3938ad85dac78cbecdeef56a66fae233ec20acc59d60505fcdf1ab1caebe26\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013003803806200130083398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611194806200016c6000396000f3fe60806040526004361061007f5760003560e01c80639ee7eecb1161004e5780639ee7eecb14610123578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80633ccfd60b146100985780636b69a592146100a2578063893d20e8146100cd5780639e87a5cd146100f85761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100b761052d565b6040516100c49190610a82565b60405180910390f35b3480156100d957600080fd5b506100e261053a565b6040516100ef9190610ade565b60405180910390f35b34801561010457600080fd5b5061010d610564565b60405161011a9190610b58565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190610ba4565b61058e565b6040516101579190610a82565b60405180910390f35b6101686101b1565b005b6101726105d6565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bfd565b61089e565b6040516101a89190610ade565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e690919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c87565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cd6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561041d5760006001828154811061039857610397610d2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041590610d5b565b915050610375565b50600067ffffffffffffffff81111561043957610438610da4565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506001908051906020019061047d9291906109c2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610e04565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610e65565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610697575b5050505050905060005b815181101561076b57600082828151811061070957610708610d2c565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d5b565b9150506106eb565b50600067ffffffffffffffff81111561078757610786610da4565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600190805190602001906107cb9291906109c2565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081490610e04565b60006040518083038185875af1925050503d8060008114610851576040519150601f19603f3d011682016040523d82523d6000602084013e610856565b606091505b505090508061089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190610e65565b60405180910390fd5b5050565b6000600182815481106108b4576108b3610d2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f283610922565b90506000670de0b6b3a7640000858361090b9190610e85565b6109159190610f0e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096b57600080fd5b505afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190610fcc565b5050509150506402540be400816109ba9190611047565b915050919050565b828054828255906000526020600020908101928215610a3b579160200282015b82811115610a3a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e2565b5b509050610a489190610a4c565b5090565b5b80821115610a65576000816000905550600101610a4d565b5090565b6000819050919050565b610a7c81610a69565b82525050565b6000602082019050610a976000830184610a73565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac882610a9d565b9050919050565b610ad881610abd565b82525050565b6000602082019050610af36000830184610acf565b92915050565b6000819050919050565b6000610b1e610b19610b1484610a9d565b610af9565b610a9d565b9050919050565b6000610b3082610b03565b9050919050565b6000610b4282610b25565b9050919050565b610b5281610b37565b82525050565b6000602082019050610b6d6000830184610b49565b92915050565b600080fd5b610b8181610abd565b8114610b8c57600080fd5b50565b600081359050610b9e81610b78565b92915050565b600060208284031215610bba57610bb9610b73565b5b6000610bc884828501610b8f565b91505092915050565b610bda81610a69565b8114610be557600080fd5b50565b600081359050610bf781610bd1565b92915050565b600060208284031215610c1357610c12610b73565b5b6000610c2184828501610be8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c71601b83610c2a565b9150610c7c82610c3b565b602082019050919050565b60006020820190508181036000830152610ca081610c64565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce182610a69565b9150610cec83610a69565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2157610d20610ca7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6682610a69565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9957610d98610ca7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dee600083610dd3565b9150610df982610dde565b600082019050919050565b6000610e0f82610de1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4f600b83610c2a565b9150610e5a82610e19565b602082019050919050565b60006020820190508181036000830152610e7e81610e42565b9050919050565b6000610e9082610a69565b9150610e9b83610a69565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed457610ed3610ca7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1982610a69565b9150610f2483610a69565b925082610f3457610f33610edf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5e81610f3f565b8114610f6957600080fd5b50565b600081519050610f7b81610f55565b92915050565b6000819050919050565b610f9481610f81565b8114610f9f57600080fd5b50565b600081519050610fb181610f8b565b92915050565b600081519050610fc681610bd1565b92915050565b600080600080600060a08688031215610fe857610fe7610b73565b5b6000610ff688828901610f6c565b955050602061100788828901610fa2565b945050604061101888828901610fb7565b935050606061102988828901610fb7565b925050608061103a88828901610f6c565b9150509295509295909350565b600061105282610f81565b915061105d83610f81565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109c5761109b610ca7565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d9576110d8610ca7565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111657611115610ca7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115357611152610ca7565b5b82820290509291505056fea2646970667358221220e04c2f7fddbf5abcef1be91c17d45c44c49bc3cfde76ff609274dee7168ac48a64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639ee7eecb1161004e5780639ee7eecb14610123578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80633ccfd60b146100985780636b69a592146100a2578063893d20e8146100cd5780639e87a5cd146100f85761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b6100a06102eb565b005b3480156100ae57600080fd5b506100b761052d565b6040516100c49190610a82565b60405180910390f35b3480156100d957600080fd5b506100e261053a565b6040516100ef9190610ade565b60405180910390f35b34801561010457600080fd5b5061010d610564565b60405161011a9190610b58565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190610ba4565b61058e565b6040516101579190610a82565b60405180910390f35b6101686101b1565b005b6101726105d6565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bfd565b61089e565b6040516101a89190610ade565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108e690919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c87565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cd6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610372576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561041d5760006001828154811061039857610397610d2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061041590610d5b565b915050610375565b50600067ffffffffffffffff81111561043957610438610da4565b5b6040519080825280602002602001820160405280156104675781602001602082028036833780820191505090505b506001908051906020019061047d9291906109c2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104a490610e04565b60006040518083038185875af1925050503d80600081146104e1576040519150601f19603f3d011682016040523d82523d6000602084013e6104e6565b606091505b505090508061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052190610e65565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610697575b5050505050905060005b815181101561076b57600082828151811061070957610708610d2c565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076390610d5b565b9150506106eb565b50600067ffffffffffffffff81111561078757610786610da4565b5b6040519080825280602002602001820160405280156107b55781602001602082028036833780820191505090505b50600190805190602001906107cb9291906109c2565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081490610e04565b60006040518083038185875af1925050503d8060008114610851576040519150601f19603f3d011682016040523d82523d6000602084013e610856565b606091505b505090508061089a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089190610e65565b60405180910390fd5b5050565b6000600182815481106108b4576108b3610d2c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f283610922565b90506000670de0b6b3a7640000858361090b9190610e85565b6109159190610f0e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096b57600080fd5b505afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190610fcc565b5050509150506402540be400816109ba9190611047565b915050919050565b828054828255906000526020600020908101928215610a3b579160200282015b82811115610a3a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e2565b5b509050610a489190610a4c565b5090565b5b80821115610a65576000816000905550600101610a4d565b5090565b6000819050919050565b610a7c81610a69565b82525050565b6000602082019050610a976000830184610a73565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac882610a9d565b9050919050565b610ad881610abd565b82525050565b6000602082019050610af36000830184610acf565b92915050565b6000819050919050565b6000610b1e610b19610b1484610a9d565b610af9565b610a9d565b9050919050565b6000610b3082610b03565b9050919050565b6000610b4282610b25565b9050919050565b610b5281610b37565b82525050565b6000602082019050610b6d6000830184610b49565b92915050565b600080fd5b610b8181610abd565b8114610b8c57600080fd5b50565b600081359050610b9e81610b78565b92915050565b600060208284031215610bba57610bb9610b73565b5b6000610bc884828501610b8f565b91505092915050565b610bda81610a69565b8114610be557600080fd5b50565b600081359050610bf781610bd1565b92915050565b600060208284031215610c1357610c12610b73565b5b6000610c2184828501610be8565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c71601b83610c2a565b9150610c7c82610c3b565b602082019050919050565b60006020820190508181036000830152610ca081610c64565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce182610a69565b9150610cec83610a69565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2157610d20610ca7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6682610a69565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9957610d98610ca7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dee600083610dd3565b9150610df982610dde565b600082019050919050565b6000610e0f82610de1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e4f600b83610c2a565b9150610e5a82610e19565b602082019050919050565b60006020820190508181036000830152610e7e81610e42565b9050919050565b6000610e9082610a69565b9150610e9b83610a69565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed457610ed3610ca7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1982610a69565b9150610f2483610a69565b925082610f3457610f33610edf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5e81610f3f565b8114610f6957600080fd5b50565b600081519050610f7b81610f55565b92915050565b6000819050919050565b610f9481610f81565b8114610f9f57600080fd5b50565b600081519050610fb181610f8b565b92915050565b600081519050610fc681610bd1565b92915050565b600080600080600060a08688031215610fe857610fe7610b73565b5b6000610ff688828901610f6c565b955050602061100788828901610fa2565b945050604061101888828901610fb7565b935050606061102988828901610fb7565b925050608061103a88828901610f6c565b9150509295509295909350565b600061105282610f81565b915061105d83610f81565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109c5761109b610ca7565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d9576110d8610ca7565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111657611115610ca7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115357611152610ca7565b5b82820290509291505056fea2646970667358221220e04c2f7fddbf5abcef1be91c17d45c44c49bc3cfde76ff609274dee7168ac48a64736f6c63430008080033",
  "devdoc": {
    "author": "Kent Miguel",
    "details": "This implements price feeds to our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contracct for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}